{"version":3,"sources":["../browserify/node_modules/browser-pack/_prelude.js","lib/index.js","lib/filter.js","lib/sanitize.js","lib/validate.js","../xp-emitter/index.js","../xp-emitter/lib/index.js","../xp-emitter/node_modules/eventemitter3/index.js"],"names":["global","XP","require","XPEmitter","filter","sanitize","validate","filterer","item","has","mapper","handle","assign","withdraw","types","freeze","keys","sanitizers","map","validators","module","exports","Class","extends","options","id","fields","strict","useful","initialize","self","this","call","promise","value","target","resolver","waterfall","next","isObject","ValidationError","attempt","set","val","zipObject","type","isString","static","get","window","forOwn","key","immutable","exp","name","field","sanitizeStep","isVoid","step","isDefined","sanitizeValue","multi","index","method","bool","validateStep","validateValue","err","isError","patterns","camelCase","camelCaseRegex","capitalize","capitalizeRegex","kebabCase","kebabCaseRegex","keyCase","keyCaseRegex","lowerCase","lowerCaseRegex","readable","readableRegex","snakeCase","snakeCaseRegex","startCase","startCaseRegex","trim","trimRegex","upperCase","upperCaseRegex","any","isAny","boolean","isBoolean","number","isFinite","object","recursive","string","exclusiveMaximum","input","max","exclusiveMinimum","min","xor","maximum","maxItems","attributes","isArray","length","maxLength","minimum","minItems","minLength","multipleOf","pattern","reg","isRegExp","toRegExp","test","InvalidError","required","isEmpty","RequiredError","isNull","ArgumentError","uniqueItems","isUniq","eventemitter3","EE","fn","context","once","EventEmitter","prototype","_events","undefined","listeners","event","i","l","ee","Array","emit","a1","a2","a3","a4","a5","args","len","arguments","removeListener","apply","j","on","listener","push","events","removeAllListeners","off","addListener","setMaxListeners","EventEmitter2","EventEmitter3"],"mappings":"AAAA;;;AKEAoB,OAAOC,QAAUnB,QAAQ;;;CCOxB,SAAUF,GACP,YAGA,IAAIgI,GAAgB9H,QAAQ,iBACxBD,EAAgBD,EAAOC,IAAMC,QAAQ,WAUzCkB,QAAOC,QAAU,GAAIpB,GAAGqB,MAAM,aAG1BC,UAASyG,KAGG,mBAAX/E,QAAyBA,OAASjD;;;;AC9B3C,YAUA,SAASiI,IAAGC,EAAIC,EAASC,GACvBrG,KAAKmG,GAAKA,EACVnG,KAAKoG,QAAUA,EACfpG,KAAKqG,KAAOA,IAAQ,EAUtB,QAASC,iBAQTA,aAAaC,UAAUC,QAAUC,OASjCH,aAAaC,UAAUG,UAAY,SAAmBC,GACpD,IAAK3G,KAAKwG,UAAYxG,KAAKwG,QAAQG,GAAQ,QAC3C,IAAI3G,KAAKwG,QAAQG,GAAOR,GAAI,OAAQnG,KAAKwG,QAAQG,GAAOR,GAExD,KAAK,GAAIS,GAAI,EAAGC,EAAI7G,KAAKwG,QAAQG,GAAO7B,OAAQgC,EAAK,GAAIC,OAAMF,GAAQA,EAAJD,EAAOA,IACxEE,EAAGF,GAAK5G,KAAKwG,QAAQG,GAAOC,GAAGT,EAGjC,OAAOW,IAUTR,aAAaC,UAAUS,KAAO,SAAcL,EAAOM,EAAIC,EAAIC,EAAIC,EAAIC,GACjE,IAAKrH,KAAKwG,UAAYxG,KAAKwG,QAAQG,GAAQ,OAAO,CAElD,IAEIW,GACAV,EAHAF,EAAY1G,KAAKwG,QAAQG,GACzBY,EAAMC,UAAU1C,MAIpB,IAAI,kBAAsB4B,GAAUP,GAAI,CAGtC,OAFIO,EAAUL,MAAMrG,KAAKyH,eAAed,EAAOD,EAAUP,IAAI,GAErDoB,GACN,IAAK,GAAG,MAAOb,GAAUP,GAAGlG,KAAKyG,EAAUN,UAAU,CACrD,KAAK,GAAG,MAAOM,GAAUP,GAAGlG,KAAKyG,EAAUN,QAASa,IAAK,CACzD,KAAK,GAAG,MAAOP,GAAUP,GAAGlG,KAAKyG,EAAUN,QAASa,EAAIC,IAAK,CAC7D,KAAK,GAAG,MAAOR,GAAUP,GAAGlG,KAAKyG,EAAUN,QAASa,EAAIC,EAAIC,IAAK,CACjE,KAAK,GAAG,MAAOT,GAAUP,GAAGlG,KAAKyG,EAAUN,QAASa,EAAIC,EAAIC,EAAIC,IAAK,CACrE,KAAK,GAAG,MAAOV,GAAUP,GAAGlG,KAAKyG,EAAUN,QAASa,EAAIC,EAAIC,EAAIC,EAAIC,IAAK,EAG3E,IAAKT,EAAI,EAAGU,EAAO,GAAIP,OAAMQ,EAAK,GAAQA,EAAJX,EAASA,IAC7CU,EAAKV,EAAI,GAAKY,UAAUZ,EAG1BF,GAAUP,GAAGuB,MAAMhB,EAAUN,QAASkB,OACjC,CACL,GACIK,GADA7C,EAAS4B,EAAU5B,MAGvB,KAAK8B,EAAI,EAAO9B,EAAJ8B,EAAYA,IAGtB,OAFIF,EAAUE,GAAGP,MAAMrG,KAAKyH,eAAed,EAAOD,EAAUE,GAAGT,IAAI,GAE3DoB,GACN,IAAK,GAAGb,EAAUE,GAAGT,GAAGlG,KAAKyG,EAAUE,GAAGR,QAAU,MACpD,KAAK,GAAGM,EAAUE,GAAGT,GAAGlG,KAAKyG,EAAUE,GAAGR,QAASa,EAAK,MACxD,KAAK,GAAGP,EAAUE,GAAGT,GAAGlG,KAAKyG,EAAUE,GAAGR,QAASa,EAAIC,EAAK,MAC5D,SACE,IAAKI,EAAM,IAAKK,EAAI,EAAGL,EAAO,GAAIP,OAAMQ,EAAK,GAAQA,EAAJI,EAASA,IACxDL,EAAKK,EAAI,GAAKH,UAAUG,EAG1BjB,GAAUE,GAAGT,GAAGuB,MAAMhB,EAAUE,GAAGR,QAASkB,IAKpD,OAAO,GAWThB,aAAaC,UAAUqB,GAAK,SAAYjB,EAAOR,EAAIC,GACjD,GAAIyB,GAAW,GAAI3B,IAAGC,EAAIC,GAAWpG,KAWrC,OATKA,MAAKwG,UAASxG,KAAKwG,YACnBxG,KAAKwG,QAAQG,GAEX3G,KAAKwG,QAAQG,GAAOR,GACpBnG,KAAKwG,QAAQG,IAChB3G,KAAKwG,QAAQG,GAAQkB,GAFM7H,KAAKwG,QAAQG,GAAOmB,KAAKD,GAF9B7H,KAAKwG,QAAQG,GAASkB,EAQzC7H,MAWTsG,aAAaC,UAAUF,KAAO,SAAcM,EAAOR,EAAIC,GACrD,GAAIyB,GAAW,GAAI3B,IAAGC,EAAIC,GAAWpG,MAAM,EAW3C,OATKA,MAAKwG,UAASxG,KAAKwG,YACnBxG,KAAKwG,QAAQG,GAEX3G,KAAKwG,QAAQG,GAAOR,GACpBnG,KAAKwG,QAAQG,IAChB3G,KAAKwG,QAAQG,GAAQkB,GAFM7H,KAAKwG,QAAQG,GAAOmB,KAAKD,GAF9B7H,KAAKwG,QAAQG,GAASkB,EAQzC7H,MAWTsG,aAAaC,UAAUkB,eAAiB,SAAwBd,EAAOR,EAAIE,GACzE,IAAKrG,KAAKwG,UAAYxG,KAAKwG,QAAQG,GAAQ,MAAO3G,KAElD,IAAI0G,GAAY1G,KAAKwG,QAAQG,GACzBoB,IAEJ,IAAI5B,IACEO,EAAUP,KAAOO,EAAUP,KAAOA,GAAOE,IAASK,EAAUL,OAC9D0B,EAAOD,KAAKpB,IAETA,EAAUP,IAAI,IAAK,GAAIS,GAAI,EAAG9B,EAAS4B,EAAU5B,OAAYA,EAAJ8B,EAAYA,KACpEF,EAAUE,GAAGT,KAAOA,GAAOE,IAASK,EAAUE,GAAGP,OACnD0B,EAAOD,KAAKpB,EAAUE,GAc5B,OANImB,GAAOjD,OACT9E,KAAKwG,QAAQG,GAA2B,IAAlBoB,EAAOjD,OAAeiD,EAAO,GAAKA,QAEjD/H,MAAKwG,QAAQG,GAGf3G,MASTsG,aAAaC,UAAUyB,mBAAqB,SAA4BrB,GACtE,MAAK3G,MAAKwG,SAENG,QAAc3G,MAAKwG,QAAQG,GAC1B3G,KAAKwG,WAEHxG,MALmBA,MAW5BsG,aAAaC,UAAU0B,IAAM3B,aAAaC,UAAUkB,eACpDnB,aAAaC,UAAU2B,YAAc5B,aAAaC,UAAUqB,GAK5DtB,aAAaC,UAAU4B,gBAAkB,WACvC,MAAOnI,OAMTsG,aAAaA,aAAeA,aAC5BA,aAAa8B,cAAgB9B,aAC7BA,aAAa+B,cAAgB/B,aAK7BjH,OAAOC,QAAUgH;;;;;CL3NhB,SAAUrI,GACP,YAGA,IAAIC,GAAKD,EAAOC,IAAMC,QAAQ,WAW9BkB,QAAOC,QAAU,SAAUc,EAAQT,GAO/B,MAJAzB,GAAGiD,OAAOf,EAAQ,SAAUQ,EAAKQ,GACzBlD,EAAGQ,IAAIiB,EAAQyB,IAAQzB,EAAOyB,GAAKC,iBAAoBjB,GAAOgB,KAG/DhB,IAGK,mBAAXc,QAAyBA,OAASjD;;;;;CDzB1C,SAAUA,GACP,YAGA,IAAIC,GAAaD,EAAOC,IAAMC,QAAQ,YAClCC,EAAaH,EAAOG,WAAaD,QAAQ,cAEzCE,EAAaF,QAAQ,YACrBG,EAAaH,QAAQ,cACrBI,EAAaJ,QAAQ,cAErBK,EAAa,SAAUC,GAAQ,MAAOP,GAAGQ,IAAID,EAAM,UAAYP,EAAGQ,IAAID,EAAM,YAC5EE,EAAa,SAAUF,EAAMG,GAAiF,MAAvEH,GAAOP,EAAGW,QAAQD,OAAQA,GAASH,GAAOP,EAAGY,SAASL,EAAM,UAAkBA,GAErHM,EAAab,EAAGc,OAAOd,EAAGe,KAAKV,EAASQ,QACxCG,EAAahB,EAAGc,OAAOd,EAAGG,OAAOH,EAAGiB,IAAIb,EAASY,WAAYP,GAASH,IACtEY,EAAalB,EAAGc,OAAOd,EAAGG,OAAOH,EAAGiB,IAAIZ,EAASa,WAAYT,GAASH,GAW1Ea,QAAOC,QAAU,GAAIpB,GAAGqB,MAAM,YAG1BC,UAASpB,EAGTqB,SACIC,GAAI,GACJC,OAAQ,KACRC,QAAQ,EACRC,QAAQ,GAaZC,WAAY,SAAUL,GAGlB,GAAIM,GAAOC,IAGX5B,GAAU6B,KAAKF,GAGfA,EAAKN,QAAUA,EACfM,EAAKL,GAAUK,EAAKN,QAAQC,GAC5BK,EAAKJ,OAAUI,EAAKN,QAAQE,WAC5BI,EAAKH,OAAUG,EAAKN,QAAQG,OAC5BG,EAAKF,OAAUE,EAAKN,QAAQI,QAahCxB,QACI6B,SAAS,EACTC,MAAO,SAAUC,EAAQC,GACrB,GAAIN,GAAOC,IACX9B,GAAGoC,WACC,SAAUC,GAAQA,GAAOrC,EAAGsC,SAASJ,IAAW,GAAIlC,GAAGuC,gBAAgB,SAAU,WAAc,OAC/F,SAAUF,GAAQrC,EAAGwC,QAAQ,SAAUH,GAAQA,EAAK,KAAMlC,EAAO+B,EAAQL,EAAKJ,OAAQI,EAAKN,WAAcc,KAC1GF,KAYX/B,UACI4B,SAAS,EACTC,MAAO,SAAUC,EAAQC,GACrB,GAAIN,GAAOC,IACX9B,GAAGoC,WACC,SAAUC,GAAQA,GAAOrC,EAAGsC,SAASJ,IAAW,GAAIlC,GAAGuC,gBAAgB,SAAU,WAAc,OAC/F,SAAUF,GAAQrC,EAAGwC,QAAQ,SAAUH,GAAQA,EAAK,KAAMjC,EAAS8B,EAAQL,EAAKJ,OAAQI,EAAKN,WAAcc,KAC5GF,KAYX9B,UACI2B,SAAS,EACTC,MAAO,SAAUC,EAAQC,GACrB,GAAIN,GAAOC,IACX9B,GAAGoC,WACC,SAAUC,GAAQA,GAAOrC,EAAGsC,SAASJ,IAAW,GAAIlC,GAAGuC,gBAAgB,SAAU,WAAc,OAC/F,SAAUF,GAAQrC,EAAGwC,QAAQ,SAAUH,GAAQA,EAAK,KAAMhC,EAAS6B,EAAQL,EAAKJ,OAAQI,EAAKN,WAAcc,KAC5GF,KAYXV,QACIgB,IAAK,SAAUC,GAAO,MAAO1C,GAAGW,OAAO+B,EAAK1C,EAAG2C,UAAUb,KAAKN,IAAKoB,KAAM,aACzEvC,SAAU,SAAUqC,GAAO,MAAO1C,GAAGsC,SAASI,KASlDlB,IACIiB,IAAK,SAAUC,GAAO,MAAOZ,MAAKN,IAAMkB,GACxCrC,SAAU,SAAUqC,GAAO,MAAO1C,GAAG6C,SAASH,GAAK,KAWvD1B,YACI8B,UAAU,EACVC,IAAK,WAAc,MAAO/B,KAS9BU,QACIe,IAAK,SAAUC,GAAO,QAASA,IAWnC7B,OACIiC,UAAU,EACVC,IAAK,WAAc,MAAOlC,KAS9Bc,QACIc,IAAK,SAAUC,GAAO,QAASA,IAWnCxB,YACI4B,UAAU,EACVC,IAAK,WAAc,MAAO7B,QAIlB,mBAAX8B,QAAyBA,OAASjD;;;;;CEjN1C,SAAUA,GACP,YAGA,IAAIqD,GAAMjC,OAAOC,QACbpB,EAAMD,EAAOC,IAAMC,QAAQ,WAa/BmD,GAAMjC,OAAOC,QAAU,SAAUc,EAAQT,EAAQF,EAAS8B,GAatD,MAVArD,GAAGiD,OAAOf,EAAQ,SAAUQ,EAAKQ,GACzB3B,EAAQG,SAAWD,EAAOyB,UAAehB,GAAOgB,KAIxDlD,EAAGiD,OAAOxB,EAAQ,SAAU6B,EAAOJ,GAC/BhB,EAAOgB,GAAOE,EAAIG,aAAarB,EAAOgB,GAAMI,EAAO7B,EAAQF,GAAU8B,EAAOA,EAAO,IAAM,IAAMH,GAC3F3B,EAAQI,QAAU3B,EAAGwD,OAAOtB,EAAOgB,WAAgBhB,GAAOgB,KAG3DhB,GAaXkB,EAAIG,aAAe,SAAUE,EAAMH,EAAO7B,EAAQF,EAAS8B,GAMvD,MAHAI,GAAOzD,EAAG0D,UAAUD,GAAQA,EAAO,KAG9BzD,EAAGsC,SAASgB,IAGjBG,EAAOL,EAAIO,cAAcF,EAAMH,EAAO,KAAMD,GAGxCC,EAAMrC,KAAOqC,EAAMM,MACnB5D,EAAGsD,EAAMrC,IAAM,SAAW,WAAWwC,EAAM,SAAUxB,EAAO4B,GACxDJ,EAAKI,GAAST,EAAIO,cAAc1B,EAAOqB,EAAOO,EAAOR,EAAO,IAAMQ,EAAQ,KACtE7D,EAAGsC,SAASmB,EAAKI,MAAYP,EAAM7B,QAAyB,cAAf6B,EAAMV,QACnDa,EAAKI,GAAST,EAAIK,EAAKI,GAAQP,EAAM7B,QAAUA,EAAQzB,EAAGW,UAAWY,GAAUG,OAAQ4B,EAAM5B,SAAU2B,EAAO,IAAMQ,EAAQ,QAG7H7D,EAAGsC,SAASmB,KAAUH,EAAM7B,QAAyB,cAAf6B,EAAMV,QACnDa,EAAOL,EAAIK,EAAMH,EAAM7B,QAAUA,EAAQzB,EAAGW,UAAWY,GAAUG,OAAQ4B,EAAM5B,SAAU2B,IAGtFI,GAjB2BA,GA6BtCL,EAAIO,cAAgB,SAAU1B,EAAOqB,EAAOO,EAAOR,GAqB/C,MAlBApB,GAAQjC,EAAG0D,UAAUzB,GAASA,EAAQ,KAIlCA,EADAqB,EAAMrC,KAAOjB,EAAGwD,OAAOK,GACfT,EAAIpC,WAAWC,IAAI6C,OAAO7B,EAAOqB,EAAMrC,IAAKoC,GAC7CC,EAAMM,OAAS5D,EAAGwD,OAAOK,GACxBT,EAAIpC,WAAW4C,MAAME,OAAO7B,EAAOqB,EAAMM,MAAOP,GAEhDD,EAAIpC,WAAW4B,KAAKkB,OAAO7B,EAAOqB,EAAMV,KAAMS,GAI1DrD,EAAGiD,OAAOK,EAAO,SAAUZ,EAAKQ,GACxBE,EAAIpC,WAAWkC,IAAgB,QAARA,GAAyB,UAARA,GAA2B,SAARA,IAC3DjB,EAAQmB,EAAIpC,WAAWkC,GAAKY,OAAO7B,EAAOqB,EAAMJ,GAAMG,MAIvDpB,GAWXmB,EAAIpC,YASAC,KAAM6C,OAAQ,SAAU5B,EAAQ6B,GAC5B,MAAO/D,GAAGwD,OAAOtB,IAAW6B,KAAY7B,IAU5C0B,OAAQE,OAAQ,SAAU5B,EAAQ6B,GAC9B,MAAO/D,GAAGwD,OAAOtB,IAAW6B,KAAY7B,IAU5CU,MAAOkB,OAAQ,SAAU5B,EAAQU,GAC7B,MAAO5C,GAAGwD,OAAOtB,IAAoB,YAATU,GAAqB,EAAQV,MAIjD,mBAAXc,QAAyBA,OAASjD;;;;;CCnJ1C,SAAUA,GACP,YAGA,IAAIqD,GAAMjC,OAAOC,QACbpB,EAAMD,EAAOC,IAAMC,QAAQ,WAa/BmD,GAAMjC,OAAOC,QAAU,SAAUc,EAAQT,EAAQF,EAAS8B,GAOtD,MAJArD,GAAGiD,OAAOxB,EAAQ,SAAU6B,EAAOJ,GAC/BE,EAAIY,aAAa9B,EAAOgB,GAAMI,EAAO7B,EAAQF,GAAU8B,EAAOA,EAAO,IAAM,IAAMH,KAG9EhB,GAaXkB,EAAIY,aAAe,SAAUP,EAAMH,EAAO7B,EAAQF,EAAS8B,GAMvD,MAHAI,GAAOzD,EAAG0D,UAAUD,GAAQA,EAAO,KAG9BzD,EAAGsC,SAASgB,IAGjBF,EAAIa,cAAcR,EAAMH,EAAO,KAAMD,GAGjCC,EAAMrC,KAAOqC,EAAMM,MACnB5D,EAAGsD,EAAMrC,IAAM,SAAW,WAAWwC,EAAM,SAAUxB,EAAO4B,GACxDT,EAAIa,cAAchC,EAAOqB,EAAOO,EAAOR,EAAO,IAAMQ,EAAQ,KACxD7D,EAAGsC,SAASL,KAAWqB,EAAM7B,QAAyB,cAAf6B,EAAMV,OAC7CQ,EAAInB,EAAOqB,EAAM7B,QAAUA,EAAQzB,EAAGW,UAAWY,GAAUG,OAAQ4B,EAAM5B,SAAU2B,EAAO,IAAMQ,EAAQ,OAGzG7D,EAAGsC,SAASmB,KAAUH,EAAM7B,QAAyB,cAAf6B,EAAMV,OACnDQ,EAAIK,EAAMH,EAAM7B,QAAUA,EAAQzB,EAAGW,UAAWY,GAAUG,OAAQ4B,EAAM5B,SAAU2B,GAG/EI,GAjB2BA,GA6BtCL,EAAIa,cAAgB,SAAUhC,EAAOqB,EAAOO,EAAOR,GAG/C,GAAIa,EAMJ,IAHAjC,EAAQjC,EAAG0D,UAAUzB,GAASA,EAAQ,KAGlCqB,EAAMrC,KAAOjB,EAAGwD,OAAOK,IACvB,GAAI7D,EAAGmE,QAAQD,EAAMd,EAAIlC,WAAWD,IAAI6C,OAAO7B,EAAOqB,EAAMrC,IAAKoC,IAAU,KAAMa,OAC9E,IAAIZ,EAAMM,OAAS5D,EAAGwD,OAAOK,IAChC,GAAI7D,EAAGmE,QAAQD,EAAMd,EAAIlC,WAAW0C,MAAME,OAAO7B,EAAOqB,EAAMM,MAAOP,IAAU,KAAMa,OAErF,IAAIlE,EAAGmE,QAAQD,EAAMd,EAAIlC,WAAW0B,KAAKkB,OAAO7B,EAAOqB,EAAMV,KAAMS,IAAU,KAAMa,EAUvF,OANAlE,GAAGiD,OAAOK,EAAO,SAAUZ,EAAKQ,GAC5B,GAAIE,EAAIlC,WAAWgC,IAAgB,QAARA,GAAyB,UAARA,GAA2B,SAARA,GACvDlD,EAAGmE,QAAQD,EAAMd,EAAIlC,WAAWgC,GAAKY,OAAO7B,EAAOqB,EAAMJ,GAAMG,IAAU,KAAMa,KAIpFjC,GAWXmB,EAAIgB,UACAC,UAAWrE,EAAGsE,eACdC,WAAYvE,EAAGwE,gBACfC,UAAWzE,EAAG0E,eACdC,QAAS3E,EAAG4E,aACZC,UAAW7E,EAAG8E,eACdC,SAAU/E,EAAGgF,cACbC,UAAWjF,EAAGkF,eACdC,UAAWnF,EAAGoF,eACdC,KAAMrF,EAAGsF,UACTC,UAAWvF,EAAGwF,gBASlBpC,EAAIvC,OACA4E,IAAKzF,EAAG0F,MACRC,UAAS3F,EAAG4F,UACZC,OAAQ7F,EAAG8F,SACXC,OAAQ/F,EAAGsC,SACX0D,UAAWhG,EAAGsC,SACd2D,OAAQjG,EAAG6C,UASfO,EAAIlC,YAUAgF,kBAAmBC,MAAO,SAAUvD,KAAM,SAAUkB,OAAQ,SAAU5B,EAAQkE,EAAK/C,GAC/E,MAAQrD,GAAG8F,SAAS5D,IAAYlC,EAAG8F,SAASM,GAAgBlE,GAAUkE,EAAM,GAAIpG,GAAGuC,gBAAgBc,GAAQ,SAAU,uBAAyB+C,GAAO,MAAlG,IAWvDC,kBAAmBF,MAAO,SAAUvD,KAAM,SAAUkB,OAAQ,SAAU5B,EAAQoE,EAAKjD,GAC/E,MAAQrD,GAAG8F,SAAS5D,IAAYlC,EAAG8F,SAASQ,GAA0BA,GAAVpE,EAAgB,GAAIlC,GAAGuC,gBAAgBc,GAAQ,SAAU,0BAA4BiD,GAAO,MAArG,IAWvDrF,KAAMkF,MAAO,WAAYvC,OAAO,EAAME,OAAQ,SAAU5B,EAAQ6B,EAAMV,GAClE,MAAOrD,GAAGuG,IAAIxC,EAAM/D,EAAGsC,SAASJ,IAAW,GAAIlC,GAAGuC,gBAAgBc,GAAQ,SAAU,oBAAsB,OAW9GmD,SAAUL,MAAO,SAAUvD,KAAM,SAAUkB,OAAQ,SAAU5B,EAAQkE,EAAK/C,GACtE,MAAQrD,GAAG8F,SAAS5D,IAAYlC,EAAG8F,SAASM,GAAgBlE,EAASkE,EAAM,GAAIpG,GAAGuC,gBAAgBc,GAAQ,SAAU,0BAA4B+C,GAAO,MAApG,IAWvDK,UAAWC,YAAaJ,IAAK,GAAIH,MAAO,SAAUvC,OAAO,EAAME,OAAQ,SAAU5B,EAAQkE,EAAK/C,GAC1F,OAAQrD,EAAG2G,QAAQzE,KAAYlC,EAAG8F,SAASM,IAAc,EAANA,GAAU,EAASlE,EAAO0E,OAASR,EAAM,GAAIpG,GAAGuC,gBAAgBc,GAAQ,SAAU,0BAA4B+C,EAAM,UAAY,OAWvLS,WAAYH,YAAaJ,IAAK,GAAIH,MAAO,SAAUvD,KAAM,SAAUkB,OAAQ,SAAU5B,EAAQkE,EAAK/C,GAC9F,OAAQrD,EAAG6C,SAASX,KAAYlC,EAAG8F,SAASM,IAAc,EAANA,GAAU,EAASlE,EAAO0E,OAASR,EAAM,GAAIpG,GAAGuC,gBAAgBc,GAAQ,SAAU,0BAA4B+C,EAAM,UAAY,OAWxLU,SAAUX,MAAO,SAAUvD,KAAM,SAAUkB,OAAQ,SAAU5B,EAAQoE,EAAKjD,GACtE,MAAQrD,GAAG8F,SAAS5D,IAAYlC,EAAG8F,SAASQ,GAAyBA,EAATpE,EAAe,GAAIlC,GAAGuC,gBAAgBc,GAAQ,SAAU,0BAA4BiD,GAAO,MAApG,IAWvDS,UAAWL,YAAaJ,IAAK,GAAIH,MAAO,SAAUvC,OAAO,EAAME,OAAQ,SAAU5B,EAAQoE,EAAKjD,GAC1F,MAAQrD,GAAG2G,QAAQzE,IAAYlC,EAAG8F,SAASQ,GAAgBpE,EAAO0E,OAASN,EAAM,GAAItG,GAAGuC,gBAAgBc,GAAQ,SAAU,0BAA4BiD,EAAM,UAAY,MAAtH,IAWtDU,WAAYN,YAAaJ,IAAK,GAAIH,MAAO,SAAUvD,KAAM,SAAUkB,OAAQ,SAAU5B,EAAQoE,EAAKjD,GAC9F,MAAQrD,GAAG6C,SAASX,IAAYlC,EAAG8F,SAASQ,GAAgBpE,EAAO0E,OAASN,EAAM,GAAItG,GAAGuC,gBAAgBc,GAAQ,SAAU,0BAA4BiD,EAAM,UAAY,MAAtH,IAWvD1C,OAAQuC,MAAO,WAAYrC,OAAQ,SAAU5B,EAAQ6B,EAAMV,GACvD,MAAOrD,GAAGuG,IAAIxC,EAAM/D,EAAG2G,QAAQzE,IAAW,GAAIlC,GAAGuC,gBAAgBc,GAAQ,SAAU,qBAAuB,OAW9G4D,YAAad,MAAO,SAAUvD,KAAM,SAAUkB,OAAQ,SAAU5B,EAAQQ,EAAKW,GACzE,MAAQrD,GAAG8F,SAAS5D,IAAYlC,EAAG8F,SAASpD,GAAgBR,EAASQ,IAAQ,EAAI,GAAI1C,GAAGuC,gBAAgBc,GAAQ,SAAU,0BAA4BX,GAAO,MAA1G,IAWvDwE,SAAUf,MAAO,OAAQ5E,QAASvB,EAAGe,KAAKqC,EAAIgB,UAAWxB,KAAM,SAAUkB,OAAQ,SAAU5B,EAAQgF,EAAS7D,GACxG,GAAI8D,GAAMnH,EAAG6C,SAASX,IAAWlC,EAAG6C,SAASqE,GAAS,KAAU9D,EAAIgB,SAAS8C,IAAYA,EAEzF,OADIlH,GAAG6C,SAASsE,IAAQnH,EAAGoH,SAASD,EAAMnH,EAAGqH,SAASH,MAAa9D,EAAIgB,SAAS8C,GAAWC,GACnFA,EAAgBA,EAAIG,KAAKpF,GAAkD,KAAxC,GAAIlC,GAAGuH,aAAalE,GAAQ,WAAzD,IAWlBmE,UAAWrB,MAAO,WAAYrC,OAAQ,SAAU5B,EAAQ6B,EAAMV,GAC1D,MAAOU,IAAQ/D,EAAGyH,QAAQvF,GAAU,GAAIlC,GAAG0H,cAAcrE,GAAQ,UAAY,OAWjFT,MAAO8D,YAAac,UAAU,GAAOjG,QAASvB,EAAGe,KAAKqC,EAAIvC,OAAQiD,OAAQ,SAAU5B,EAAQU,EAAMS,GAC9F,OAAOrD,EAAGQ,IAAI4C,EAAIvC,MAAO+B,GAAQ,QAAWQ,EAAIvC,MAAM+B,GAAQ,OAAOV,IAAYlC,EAAG2H,OAAOzF,GAAsD,KAA5C,GAAIlC,GAAG4H,cAAcvE,EAAMT,GAAQ,SAW5IiF,aAAc1B,MAAO,WAAYvC,OAAO,EAAME,OAAQ,SAAU5B,EAAQ6B,EAAMV,GAC1E,MAAQrD,GAAG2G,QAAQzE,GAAmB6B,IAAS/D,EAAG8H,OAAO5F,GAAU,GAAIlC,GAAGuC,gBAAgBc,GAAQ,SAAU,8BAAgC,MAA/G,MAIrB,mBAAXL,QAAyBA,OAASjD","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*jslint browser: true, devel: true, node: true, ass: true, nomen: true, unparam: true, indent: 4 */\r\n\r\n/**\r\n * @license\r\n * Copyright (c) 2015 The ExpandJS authors. All rights reserved.\r\n * This code may only be used under the BSD style license found at https://expandjs.github.io/LICENSE.txt\r\n * The complete set of authors may be found at https://expandjs.github.io/AUTHORS.txt\r\n * The complete set of contributors may be found at https://expandjs.github.io/CONTRIBUTORS.txt\r\n */\r\n(function (global) {\r\n    \"use strict\";\r\n\r\n    // Vars\r\n    var XP         = global.XP || require('expandjs'),\r\n        XPEmitter  = global.XPEmitter || require('xp-emitter'),\r\n\r\n        filter     = require('./filter'),\r\n        sanitize   = require('./sanitize'),\r\n        validate   = require('./validate'),\r\n\r\n        filterer   = function (item) { return XP.has(item, 'input') || XP.has(item, 'options'); },\r\n        mapper     = function (item, handle) { item = XP.assign({handle: handle}, item); XP.withdraw(item, 'method'); return item; },\r\n\r\n        types      = XP.freeze(XP.keys(validate.types)),\r\n        sanitizers = XP.freeze(XP.filter(XP.map(sanitize.sanitizers, mapper), filterer)),\r\n        validators = XP.freeze(XP.filter(XP.map(validate.validators, mapper), filterer));\r\n\r\n    /*********************************************************************/\r\n\r\n    /**\r\n     * This class is used to provide scheming functionalities, including sanitization and validation.\r\n     *\r\n     * @class XPSchema\r\n     * @description This class is used to provide scheming functionalities, including sanitization and validation\r\n     * @extends XPEmitter\r\n     */\r\n    module.exports = new XP.Class('XPSchema', {\r\n\r\n        // EXTENDS\r\n        extends: XPEmitter,\r\n\r\n        // OPTIONS\r\n        options: {\r\n            id: '',\r\n            fields: null,\r\n            strict: false,\r\n            useful: false\r\n        },\r\n\r\n        /*********************************************************************/\r\n\r\n        /**\r\n         * @constructs\r\n         * @param {Object} options\r\n         *   @param {string} options.id\r\n         *   @param {Object} [options.fields]\r\n         *   @param {boolean} [options.strict = false]\r\n         *   @param {boolean} [options.useful = false]\r\n         */\r\n        initialize: function (options) {\r\n\r\n            // Vars\r\n            var self = this;\r\n\r\n            // Super\r\n            XPEmitter.call(self);\r\n\r\n            // Setting\r\n            self.options = options;\r\n            self.id      = self.options.id;\r\n            self.fields  = self.options.fields || {};\r\n            self.strict  = self.options.strict;\r\n            self.useful  = self.options.useful;\r\n        },\r\n\r\n        /*********************************************************************/\r\n\r\n        /**\r\n         * Filters the target.\r\n         *\r\n         * @method filter\r\n         * @param {Object} target\r\n         * @param {Function} [resolver]\r\n         * @returns {Promise}\r\n         */\r\n        filter: {\r\n            promise: true,\r\n            value: function (target, resolver) {\r\n                var self = this;\r\n                XP.waterfall([\r\n                    function (next) { next((!XP.isObject(target) && new XP.ValidationError('target', 'Object')) || null); },\r\n                    function (next) { XP.attempt(function (next) { next(null, filter(target, self.fields, self.options)); }, next); }\r\n                ], resolver);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Sanitizes the target.\r\n         *\r\n         * @method sanitize\r\n         * @param {Object} target\r\n         * @param {Function} [resolver]\r\n         * @returns {Promise}\r\n         */\r\n        sanitize: {\r\n            promise: true,\r\n            value: function (target, resolver) {\r\n                var self = this;\r\n                XP.waterfall([\r\n                    function (next) { next((!XP.isObject(target) && new XP.ValidationError('target', 'Object')) || null); },\r\n                    function (next) { XP.attempt(function (next) { next(null, sanitize(target, self.fields, self.options)); }, next); }\r\n                ], resolver);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Validates the target.\r\n         *\r\n         * @method validate\r\n         * @param {Object} target\r\n         * @param {Function} [resolver]\r\n         * @returns {Promise}\r\n         */\r\n        validate: {\r\n            promise: true,\r\n            value: function (target, resolver) {\r\n                var self = this;\r\n                XP.waterfall([\r\n                    function (next) { next((!XP.isObject(target) && new XP.ValidationError('target', 'Object')) || null); },\r\n                    function (next) { XP.attempt(function (next) { next(null, validate(target, self.fields, self.options)); }, next); }\r\n                ], resolver);\r\n            }\r\n        },\r\n\r\n        /*********************************************************************/\r\n\r\n        /**\r\n         * TODO DOC\r\n         *\r\n         * @property fields\r\n         * @type Object\r\n         */\r\n        fields: {\r\n            set: function (val) { return XP.assign(val, XP.zipObject(this.id, {type: 'string'})); },\r\n            validate: function (val) { return XP.isObject(val); }\r\n        },\r\n\r\n        /**\r\n         * TODO DOC\r\n         *\r\n         * @property id\r\n         * @type string\r\n         */\r\n        id: {\r\n            set: function (val) { return this.id || val; },\r\n            validate: function (val) { return XP.isString(val, true); }\r\n        },\r\n\r\n        /**\r\n         * TODO DOC\r\n         *\r\n         * @property sanitizers\r\n         * @type Object\r\n         * @readonly\r\n         * @static\r\n         */\r\n        sanitizers: {\r\n            'static': true,\r\n            get: function () { return sanitizers; }\r\n        },\r\n\r\n        /**\r\n         * TODO DOC\r\n         *\r\n         * @property strict\r\n         * @type boolean\r\n         */\r\n        strict: {\r\n            set: function (val) { return !!val; }\r\n        },\r\n\r\n        /**\r\n         * TODO DOC\r\n         *\r\n         * @property types\r\n         * @type Array\r\n         * @readonly\r\n         * @static\r\n         */\r\n        types: {\r\n            'static': true,\r\n            get: function () { return types; }\r\n        },\r\n\r\n        /**\r\n         * TODO DOC\r\n         *\r\n         * @property useful\r\n         * @type boolean\r\n         */\r\n        useful: {\r\n            set: function (val) { return !!val; }\r\n        },\r\n\r\n        /**\r\n         * TODO DOC\r\n         *\r\n         * @property validators\r\n         * @type Object\r\n         * @readonly\r\n         * @static\r\n         */\r\n        validators: {\r\n            'static': true,\r\n            get: function () { return validators; }\r\n        }\r\n    });\r\n\r\n}(typeof window !== \"undefined\" ? window : global));","/*jslint browser: true, devel: true, node: true, ass: true, nomen: true, unparam: true, indent: 4 */\r\n\r\n/**\r\n * @license\r\n * Copyright (c) 2015 The ExpandJS authors. All rights reserved.\r\n * This code may only be used under the BSD style license found at https://expandjs.github.io/LICENSE.txt\r\n * The complete set of authors may be found at https://expandjs.github.io/AUTHORS.txt\r\n * The complete set of contributors may be found at https://expandjs.github.io/CONTRIBUTORS.txt\r\n */\r\n(function (global) {\r\n    \"use strict\";\r\n\r\n    // Vars\r\n    var XP = global.XP || require('expandjs');\r\n\r\n    /*********************************************************************/\r\n\r\n    /**\r\n     * Filters the target\r\n     *\r\n     * @param {Object} target\r\n     * @param {Object} fields\r\n     * @returns {Object}\r\n     */\r\n    module.exports = function (target, fields) {\r\n\r\n        // Filtering\r\n        XP.forOwn(target, function (val, key) {\r\n            if (XP.has(fields, key) && fields[key].immutable) { delete target[key]; }\r\n        });\r\n\r\n        return target;\r\n    };\r\n\r\n}(typeof window !== \"undefined\" ? window : global));","/*jslint browser: true, devel: true, node: true, ass: true, nomen: true, unparam: true, indent: 4 */\r\n\r\n/**\r\n * @license\r\n * Copyright (c) 2015 The ExpandJS authors. All rights reserved.\r\n * This code may only be used under the BSD style license found at https://expandjs.github.io/LICENSE.txt\r\n * The complete set of authors may be found at https://expandjs.github.io/AUTHORS.txt\r\n * The complete set of contributors may be found at https://expandjs.github.io/CONTRIBUTORS.txt\r\n */\r\n(function (global) {\r\n    \"use strict\";\r\n\r\n    // Vars\r\n    var exp = module.exports,\r\n        XP  = global.XP || require('expandjs');\r\n\r\n    /*********************************************************************/\r\n\r\n    /**\r\n     * Sanitize the target\r\n     *\r\n     * @param {Object} target\r\n     * @param {Object} fields\r\n     * @param {Object} [options]\r\n     * @param {string} [name]\r\n     * @returns {Object}\r\n     */\r\n    exp = module.exports = function (target, fields, options, name) {\r\n\r\n        // Restricting\r\n        XP.forOwn(target, function (val, key) {\r\n            if (options.strict && !fields[key]) { delete target[key]; }\r\n        });\r\n\r\n        // Sanitizing\r\n        XP.forOwn(fields, function (field, key) {\r\n            target[key] = exp.sanitizeStep(target[key], field, fields, options, (name ? name + '.' : '') + key);\r\n            if (options.useful && XP.isVoid(target[key])) { delete target[key]; }\r\n        });\r\n\r\n        return target;\r\n    };\r\n\r\n    /**\r\n     * Sanitizes the step\r\n     *\r\n     * @param {*} step\r\n     * @param {Object} [field]\r\n     * @param {Object} [fields]\r\n     * @param {Object} [options]\r\n     * @param {string} [name]\r\n     * @returns {*}\r\n     */\r\n    exp.sanitizeStep = function (step, field, fields, options, name) {\r\n\r\n        // Setting\r\n        step = XP.isDefined(step) ? step : null;\r\n\r\n        // Checking\r\n        if (!XP.isObject(field)) { return step; }\r\n\r\n        // Sanitizing (step)\r\n        step = exp.sanitizeValue(step, field, null, name);\r\n\r\n        // Sanitizing (values)\r\n        if (field.map || field.multi) {\r\n            XP[field.map ? 'forOwn' : 'forEach'](step, function (value, index) {\r\n                step[index] = exp.sanitizeValue(value, field, index, name + '[' + index + ']');\r\n                if (XP.isObject(step[index]) && (field.fields || field.type === 'recursive')) {\r\n                    step[index] = exp(step[index], field.fields || fields, XP.assign({}, options, {strict: field.strict}), name + '[' + index + ']');\r\n                }\r\n            });\r\n        } else if (XP.isObject(step) && (field.fields || field.type === 'recursive')) {\r\n            step = exp(step, field.fields || fields, XP.assign({}, options, {strict: field.strict}), name);\r\n        }\r\n\r\n        return step;\r\n    };\r\n\r\n    /**\r\n     * Sanitizes the value\r\n     *\r\n     * @param {*} value\r\n     * @param {Object} [field]\r\n     * @param {number | string} [index]\r\n     * @param {string} [name]\r\n     * @returns {*}\r\n     */\r\n    exp.sanitizeValue = function (value, field, index, name) {\r\n\r\n        // Setting\r\n        value = XP.isDefined(value) ? value : null;\r\n\r\n        // Sanitizing (type)\r\n        if (field.map && XP.isVoid(index)) {\r\n            value = exp.sanitizers.map.method(value, field.map, name);\r\n        } else if (field.multi && XP.isVoid(index)) {\r\n            value = exp.sanitizers.multi.method(value, field.multi, name);\r\n        } else {\r\n            value = exp.sanitizers.type.method(value, field.type, name);\r\n        }\r\n\r\n        // Sanitizing (other)\r\n        XP.forOwn(field, function (val, key) {\r\n            if (exp.sanitizers[key] && key !== 'map' && key !== 'multi' && key !== 'type') {\r\n                value = exp.sanitizers[key].method(value, field[key], name);\r\n            }\r\n        });\r\n\r\n        return value;\r\n    };\r\n\r\n    /*********************************************************************/\r\n\r\n    /**\r\n     * The available sanitizers.\r\n     *\r\n     * @property sanitizers\r\n     * @type Object\r\n     */\r\n    exp.sanitizers = {\r\n\r\n        /**\r\n         * Returns map representation of target (based on bool)\r\n         *\r\n         * @param {*} target\r\n         * @param {boolean} bool\r\n         * @returns {*}\r\n         */\r\n        map: {method: function (target, bool) {\r\n            return XP.isVoid(target) && bool ? {} : target;\r\n        }},\r\n\r\n        /**\r\n         * Returns array representation of target (based on bool)\r\n         *\r\n         * @param {*} target\r\n         * @param {boolean} bool\r\n         * @returns {*}\r\n         */\r\n        multi: {method: function (target, bool) {\r\n            return XP.isVoid(target) && bool ? [] : target;\r\n        }},\r\n\r\n        /**\r\n         * Returns typed representation of target\r\n         *\r\n         * @param {*} target\r\n         * @param {string} type\r\n         * @returns {*}\r\n         */\r\n        type: {method: function (target, type) {\r\n            return XP.isVoid(target) && type === 'boolean' ? false : target;\r\n        }}\r\n    };\r\n\r\n}(typeof window !== \"undefined\" ? window : global));","/*jslint browser: true, devel: true, node: true, ass: true, nomen: true, unparam: true, indent: 4 */\r\n\r\n/**\r\n * @license\r\n * Copyright (c) 2015 The ExpandJS authors. All rights reserved.\r\n * This code may only be used under the BSD style license found at https://expandjs.github.io/LICENSE.txt\r\n * The complete set of authors may be found at https://expandjs.github.io/AUTHORS.txt\r\n * The complete set of contributors may be found at https://expandjs.github.io/CONTRIBUTORS.txt\r\n */\r\n(function (global) {\r\n    \"use strict\";\r\n\r\n    // Vars\r\n    var exp = module.exports,\r\n        XP  = global.XP || require('expandjs');\r\n\r\n    /*********************************************************************/\r\n\r\n    /**\r\n     * Validates the target.\r\n     *\r\n     * @param {Object} target\r\n     * @param {Object} fields\r\n     * @param {Object} [options]\r\n     * @param {string} [name]\r\n     * @returns {Object}\r\n     */\r\n    exp = module.exports = function (target, fields, options, name) {\r\n\r\n        // Validating\r\n        XP.forOwn(fields, function (field, key) {\r\n            exp.validateStep(target[key], field, fields, options, (name ? name + '.' : '') + key);\r\n        });\r\n\r\n        return target;\r\n    };\r\n\r\n    /**\r\n     * Validates the step.\r\n     *\r\n     * @param {*} step\r\n     * @param {Object} [field]\r\n     * @param {Object} [fields]\r\n     * @param {Object} [options]\r\n     * @param {string} [name]\r\n     * @returns {*}\r\n     */\r\n    exp.validateStep = function (step, field, fields, options, name) {\r\n\r\n        // Setting\r\n        step = XP.isDefined(step) ? step : null;\r\n\r\n        // Checking\r\n        if (!XP.isObject(field)) { return step; }\r\n\r\n        // Validating (step)\r\n        exp.validateValue(step, field, null, name);\r\n\r\n        // Validating (values)\r\n        if (field.map || field.multi) {\r\n            XP[field.map ? 'forOwn' : 'forEach'](step, function (value, index) {\r\n                exp.validateValue(value, field, index, name + '[' + index + ']');\r\n                if (XP.isObject(value) && (field.fields || field.type === 'recursive')) {\r\n                    exp(value, field.fields || fields, XP.assign({}, options, {strict: field.strict}), name + '[' + index + ']');\r\n                }\r\n            });\r\n        } else if (XP.isObject(step) && (field.fields || field.type === 'recursive')) {\r\n            exp(step, field.fields || fields, XP.assign({}, options, {strict: field.strict}), name);\r\n        }\r\n\r\n        return step;\r\n    };\r\n\r\n    /**\r\n     * Validates the value.\r\n     *\r\n     * @param {*} value\r\n     * @param {Object} [field]\r\n     * @param {number | string} [index]\r\n     * @param {string} [name]\r\n     * @returns {*}\r\n     */\r\n    exp.validateValue = function (value, field, index, name) {\r\n\r\n        // Vars\r\n        var err;\r\n\r\n        // Setting\r\n        value = XP.isDefined(value) ? value : null;\r\n\r\n        // Validating (type)\r\n        if (field.map && XP.isVoid(index)) {\r\n            if (XP.isError(err = exp.validators.map.method(value, field.map, name))) { throw err; }\r\n        } else if (field.multi && XP.isVoid(index)) {\r\n            if (XP.isError(err = exp.validators.multi.method(value, field.multi, name))) { throw err; }\r\n        } else {\r\n            if (XP.isError(err = exp.validators.type.method(value, field.type, name))) { throw err; }\r\n        }\r\n\r\n        // Validating (other)\r\n        XP.forOwn(field, function (val, key) {\r\n            if (exp.validators[key] && key !== 'map' && key !== 'multi' && key !== 'type') {\r\n                if (XP.isError(err = exp.validators[key].method(value, field[key], name))) { throw err; }\r\n            }\r\n        });\r\n\r\n        return value;\r\n    };\r\n\r\n    /*********************************************************************/\r\n\r\n    /**\r\n     * The available patterns.\r\n     *\r\n     * @property patterns\r\n     * @type Object\r\n     */\r\n    exp.patterns = {\r\n        camelCase: XP.camelCaseRegex,\r\n        capitalize: XP.capitalizeRegex,\r\n        kebabCase: XP.kebabCaseRegex,\r\n        keyCase: XP.keyCaseRegex,\r\n        lowerCase: XP.lowerCaseRegex,\r\n        readable: XP.readableRegex,\r\n        snakeCase: XP.snakeCaseRegex,\r\n        startCase: XP.startCaseRegex,\r\n        trim: XP.trimRegex,\r\n        upperCase: XP.upperCaseRegex\r\n    };\r\n\r\n    /**\r\n     * The available types.\r\n     *\r\n     * @property types\r\n     * @type Object\r\n     */\r\n    exp.types = {\r\n        any: XP.isAny,\r\n        boolean: XP.isBoolean,\r\n        number: XP.isFinite,\r\n        object: XP.isObject,\r\n        recursive: XP.isObject,\r\n        string: XP.isString\r\n    };\r\n\r\n    /**\r\n     * The available validators.\r\n     *\r\n     * @property validators\r\n     * @type Object\r\n     */\r\n    exp.validators = {\r\n\r\n        /**\r\n         * Returns error if target is gte than max\r\n         *\r\n         * @param {number} target\r\n         * @param {number} max\r\n         * @param {string} [name]\r\n         * @returns {boolean | Error | null}\r\n         */\r\n        exclusiveMaximum: {input: 'number', type: 'number', method: function (target, max, name) {\r\n            return !XP.isFinite(target) || !XP.isFinite(max) ? false : (target >= max ? new XP.ValidationError(name || 'target', 'should be less than ' + max) : null);\r\n        }},\r\n\r\n        /**\r\n         * Returns error if target is lte than min\r\n         *\r\n         * @param {number} target\r\n         * @param {number} min\r\n         * @param {string} [name]\r\n         * @returns {boolean | Error | null}\r\n         */\r\n        exclusiveMinimum: {input: 'number', type: 'number', method: function (target, min, name) {\r\n            return !XP.isFinite(target) || !XP.isFinite(min) ? false : (target <= min ? new XP.ValidationError(name || 'target', 'should be greater than ' + min) : null);\r\n        }},\r\n\r\n        /**\r\n         * Returns error if target is not an map (based on bool)\r\n         *\r\n         * @param {*} target\r\n         * @param {boolean} bool\r\n         * @param {string} [name]\r\n         * @returns {boolean | Error | null}\r\n         */\r\n        map: {input: 'checkbox', multi: true, method: function (target, bool, name) {\r\n            return XP.xor(bool, XP.isObject(target)) ? new XP.ValidationError(name || 'target', 'should be an map') : null;\r\n        }},\r\n\r\n        /**\r\n         * Returns error if target is gt than max\r\n         *\r\n         * @param {number} target\r\n         * @param {number} max\r\n         * @param {string} [name]\r\n         * @returns {boolean | Error | null}\r\n         */\r\n        maximum: {input: 'number', type: 'number', method: function (target, max, name) {\r\n            return !XP.isFinite(target) || !XP.isFinite(max) ? false : (target > max ? new XP.ValidationError(name || 'target', 'should be a maximum of ' + max) : null);\r\n        }},\r\n\r\n        /**\r\n         * Returns error if target length is gt than max\r\n         *\r\n         * @param {Array} target\r\n         * @param {number} max\r\n         * @param {string} [name]\r\n         * @returns {boolean | Error | null}\r\n         */\r\n        maxItems: {attributes: {min: 1}, input: 'number', multi: true, method: function (target, max, name) {\r\n            return !XP.isArray(target) || !XP.isFinite(max) || max < 1 ? false : (target.length > max ? new XP.ValidationError(name || 'target', 'should be a maximum of ' + max + ' items') : null);\r\n        }},\r\n\r\n        /**\r\n         * Returns error if target length is gt than max\r\n         *\r\n         * @param {string} target\r\n         * @param {number} max\r\n         * @param {string} [name]\r\n         * @returns {boolean | Error | null}\r\n         */\r\n        maxLength: {attributes: {min: 1}, input: 'number', type: 'string', method: function (target, max, name) {\r\n            return !XP.isString(target) || !XP.isFinite(max) || max < 1 ? false : (target.length > max ? new XP.ValidationError(name || 'target', 'should be a maximum of ' + max + ' chars') : null);\r\n        }},\r\n\r\n        /**\r\n         * Returns error if target is lt than min\r\n         *\r\n         * @param {number} target\r\n         * @param {number} min\r\n         * @param {string} [name]\r\n         * @returns {boolean | Error|null}\r\n         */\r\n        minimum: {input: 'number', type: 'number', method: function (target, min, name) {\r\n            return !XP.isFinite(target) || !XP.isFinite(min) ? false : (target < min ? new XP.ValidationError(name || 'target', 'should be a minimum of ' + min) : null);\r\n        }},\r\n\r\n        /**\r\n         * Returns error if target length is lt than min\r\n         *\r\n         * @param {Array} target\r\n         * @param {number} min\r\n         * @param {string} [name]\r\n         * @returns {boolean | Error | null}\r\n         */\r\n        minItems: {attributes: {min: 1}, input: 'number', multi: true, method: function (target, min, name) {\r\n            return !XP.isArray(target) || !XP.isFinite(min) ? false : (target.length < min ? new XP.ValidationError(name || 'target', 'should be a minimum of ' + min + ' items') : null);\r\n        }},\r\n\r\n        /**\r\n         * Returns error if target length is lt than min\r\n         *\r\n         * @param {string} target\r\n         * @param {number} min\r\n         * @param {string} [name]\r\n         * @returns {boolean | Error|null}\r\n         */\r\n        minLength: {attributes: {min: 1}, input: 'number', type: 'string', method: function (target, min, name) {\r\n            return !XP.isString(target) || !XP.isFinite(min) ? false : (target.length < min ? new XP.ValidationError(name || 'target', 'should be a minimum of ' + min + ' chars') : null);\r\n        }},\r\n\r\n        /**\r\n         * Returns error if target is not array (based on bool)\r\n         *\r\n         * @param {*} target\r\n         * @param {boolean} bool\r\n         * @param {string} [name]\r\n         * @returns {boolean | Error | null}\r\n         */\r\n        multi: {input: 'checkbox', method: function (target, bool, name) {\r\n            return XP.xor(bool, XP.isArray(target)) ? new XP.ValidationError(name || 'target', 'should be a multi') : null;\r\n        }},\r\n\r\n        /**\r\n         * Returns error if target is not multiple of val\r\n         *\r\n         * @param {number} target\r\n         * @param {number} val\r\n         * @param {string} [name]\r\n         * @returns {boolean | Error | null}\r\n         */\r\n        multipleOf: {input: 'number', type: 'number', method: function (target, val, name) {\r\n            return !XP.isFinite(target) || !XP.isFinite(val) ? false : (target % val !== 0 ? new XP.ValidationError(name || 'target', 'should be divisible by ' + val) : null);\r\n        }},\r\n\r\n        /**\r\n         * Returns error if target matches pattern\r\n         *\r\n         * @param {string} target\r\n         * @param {string} pattern\r\n         * @param {string} [name]\r\n         * @returns {boolean | Error | null}\r\n         */\r\n        pattern: {input: 'text', options: XP.keys(exp.patterns), type: 'string', method: function (target, pattern, name) {\r\n            var reg = XP.isString(target) && XP.isString(pattern, true) && (exp.patterns[pattern] || pattern);\r\n            if (XP.isString(reg) && XP.isRegExp(reg = XP.toRegExp(pattern))) { exp.patterns[pattern] = reg; }\r\n            return !reg ? false : (!reg.test(target) ? new XP.InvalidError(name || 'target') : null);\r\n        }},\r\n\r\n        /**\r\n         * Returns error if target is empty (based on bool)\r\n         *\r\n         * @param {*} target\r\n         * @param {boolean} bool\r\n         * @param {string} [name]\r\n         * @returns {boolean | Error | null}\r\n         */\r\n        required: {input: 'checkbox', method: function (target, bool, name) {\r\n            return bool && XP.isEmpty(target) ? new XP.RequiredError(name || 'target') : null;\r\n        }},\r\n\r\n        /**\r\n         * Returns error if target type is not correct\r\n         *\r\n         * @param {*} target\r\n         * @param {string} type\r\n         * @param {string} [name]\r\n         * @returns {boolean | Error|null}\r\n         */\r\n        type: {attributes: {required: true}, options: XP.keys(exp.types), method: function (target, type, name) {\r\n            return XP.has(exp.types, type || 'any') && !exp.types[type || 'any'](target) && !XP.isNull(target) ? new XP.ArgumentError(name, type || 'any') : null;\r\n        }},\r\n\r\n        /**\r\n         * Returns error if target includes duplicates (based on bool)\r\n         *\r\n         * @param {Array} target\r\n         * @param {boolean} bool\r\n         * @param {string} [name]\r\n         * @returns {boolean | Error | null}\r\n         */\r\n        uniqueItems: {input: 'checkbox', multi: true, method: function (target, bool, name) {\r\n            return !XP.isArray(target) ? false : (bool && !XP.isUniq(target) ? new XP.ValidationError(name || 'target', 'should not have duplicates') : null);\r\n        }}\r\n    };\r\n\r\n}(typeof window !== \"undefined\" ? window : global));","/*jslint browser: true, devel: true, node: true, ass: true, nomen: true, unparam: true, indent: 4 */\r\n\r\nmodule.exports = require('./lib');","/*jslint browser: true, devel: true, node: true, ass: true, nomen: true, unparam: true, indent: 4 */\r\n\r\n/**\r\n * @license\r\n * Copyright (c) 2015 The ExpandJS authors. All rights reserved.\r\n * This code may only be used under the BSD style license found at https://expandjs.github.io/LICENSE.txt\r\n * The complete set of authors may be found at https://expandjs.github.io/AUTHORS.txt\r\n * The complete set of contributors may be found at https://expandjs.github.io/CONTRIBUTORS.txt\r\n */\r\n(function (global) {\r\n    \"use strict\";\r\n\r\n    // Vars\r\n    var eventemitter3 = require('eventemitter3'),\r\n        XP            = global.XP || require('expandjs');\r\n\r\n    /*********************************************************************/\r\n\r\n    /**\r\n     * This class is used to provide event emitting functionalities.\r\n     *\r\n     * @class XPEmitter\r\n     * @description This class is used to provide event emitting functionalities\r\n     */\r\n    module.exports = new XP.Class('XPEmitter', {\r\n\r\n        // EXTENDS\r\n        extends: eventemitter3\r\n    });\r\n\r\n}(typeof window !== \"undefined\" ? window : global));","'use strict';\n\n/**\n * Representation of a single EventEmitter function.\n *\n * @param {Function} fn Event handler to be called.\n * @param {Mixed} context Context for function execution.\n * @param {Boolean} once Only emit once\n * @api private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Minimal EventEmitter interface that is molded against the Node.js\n * EventEmitter interface.\n *\n * @constructor\n * @api public\n */\nfunction EventEmitter() { /* Nothing to set */ }\n\n/**\n * Holds the assigned EventEmitters by name.\n *\n * @type {Object}\n * @private\n */\nEventEmitter.prototype._events = undefined;\n\n/**\n * Return a list of assigned event listeners.\n *\n * @param {String} event The events that should be listed.\n * @returns {Array}\n * @api public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  if (!this._events || !this._events[event]) return [];\n  if (this._events[event].fn) return [this._events[event].fn];\n\n  for (var i = 0, l = this._events[event].length, ee = new Array(l); i < l; i++) {\n    ee[i] = this._events[event][i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Emit an event to all registered event listeners.\n *\n * @param {String} event The name of the event.\n * @returns {Boolean} Indication if we've emitted an event.\n * @api public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  if (!this._events || !this._events[event]) return false;\n\n  var listeners = this._events[event]\n    , len = arguments.length\n    , args\n    , i;\n\n  if ('function' === typeof listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Register a new EventListener for the given event.\n *\n * @param {String} event Name of the event.\n * @param {Functon} fn Callback function.\n * @param {Mixed} context The context of the function.\n * @api public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  var listener = new EE(fn, context || this);\n\n  if (!this._events) this._events = {};\n  if (!this._events[event]) this._events[event] = listener;\n  else {\n    if (!this._events[event].fn) this._events[event].push(listener);\n    else this._events[event] = [\n      this._events[event], listener\n    ];\n  }\n\n  return this;\n};\n\n/**\n * Add an EventListener that's only called once.\n *\n * @param {String} event Name of the event.\n * @param {Function} fn Callback function.\n * @param {Mixed} context The context of the function.\n * @api public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  var listener = new EE(fn, context || this, true);\n\n  if (!this._events) this._events = {};\n  if (!this._events[event]) this._events[event] = listener;\n  else {\n    if (!this._events[event].fn) this._events[event].push(listener);\n    else this._events[event] = [\n      this._events[event], listener\n    ];\n  }\n\n  return this;\n};\n\n/**\n * Remove event listeners.\n *\n * @param {String} event The event we want to remove.\n * @param {Function} fn The listener that we need to find.\n * @param {Boolean} once Only remove once listeners.\n * @api public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, once) {\n  if (!this._events || !this._events[event]) return this;\n\n  var listeners = this._events[event]\n    , events = [];\n\n  if (fn) {\n    if (listeners.fn && (listeners.fn !== fn || (once && !listeners.once))) {\n      events.push(listeners);\n    }\n    if (!listeners.fn) for (var i = 0, length = listeners.length; i < length; i++) {\n      if (listeners[i].fn !== fn || (once && !listeners[i].once)) {\n        events.push(listeners[i]);\n      }\n    }\n  }\n\n  //\n  // Reset the array, or remove it completely if we have no more listeners.\n  //\n  if (events.length) {\n    this._events[event] = events.length === 1 ? events[0] : events;\n  } else {\n    delete this._events[event];\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners or only the listeners for the specified event.\n *\n * @param {String} event The event want to remove all listeners for.\n * @api public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  if (!this._events) return this;\n\n  if (event) delete this._events[event];\n  else this._events = {};\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// This function doesn't apply anymore.\n//\nEventEmitter.prototype.setMaxListeners = function setMaxListeners() {\n  return this;\n};\n\n//\n// Expose the module.\n//\nEventEmitter.EventEmitter = EventEmitter;\nEventEmitter.EventEmitter2 = EventEmitter;\nEventEmitter.EventEmitter3 = EventEmitter;\n\n//\n// Expose the module.\n//\nmodule.exports = EventEmitter;\n"]}